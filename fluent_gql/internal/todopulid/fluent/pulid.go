// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by flc, DO NOT EDIT.

package fluent

import (
	"context"
	"fmt"

	"github.com/usalko/fluent/fluent_gql/internal/todopulid/fluent/billproduct"
	"github.com/usalko/fluent/fluent_gql/internal/todopulid/fluent/category"
	"github.com/usalko/fluent/fluent_gql/internal/todopulid/fluent/friendship"
	"github.com/usalko/fluent/fluent_gql/internal/todopulid/fluent/group"
	"github.com/usalko/fluent/fluent_gql/internal/todopulid/fluent/schema/pulid"
	"github.com/usalko/fluent/fluent_gql/internal/todopulid/fluent/todo"
	"github.com/usalko/fluent/fluent_gql/internal/todopulid/fluent/user"
	"github.com/usalko/fluent/fluent_gql/internal/todopulid/fluent/verysecret"
)

// prefixMap maps PULID prefixes to table names.
var prefixMap = map[pulid.ID]string{
	"BP": billproduct.Table,
	"CR": category.Table,
	"FS": friendship.Table,
	"GR": group.Table,
	"TD": todo.Table,
	"UR": user.Table,
	"VR": verysecret.Table,
}

// IDToType maps a pulid.ID to the underlying table.
func IDToType(ctx context.Context, id pulid.ID) (string, error) {
	if len(id) < 2 {
		return "", fmt.Errorf("IDToType: id too short")
	}
	prefix := id[:2]
	typ := prefixMap[prefix]
	if typ == "" {
		return "", fmt.Errorf("IDToType: could not map prefix '%s' to a type", prefix)
	}
	return typ, nil
}
